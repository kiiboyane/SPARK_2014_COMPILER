PROCEDURE_TOKEN  procedure
IN_TOKEN in
OUT_TOKEN  out 
WITH_TOKEN with 
GLOBAL_TOKEN Global
DEPENDS_TOKEN Depends 
NUM_TOKEN 5533 
PRE_TOKEN Pre
POST_TOKEN Post
INTEGER_TOKEN Integer
BEGIN_TOKEN begin 
END_TOKEN end 
OLD_TOKEN 'Old
PV_TOKEN  ;
LAST_TOKEN 'Last
RETURN_TOKEN return 
FUNCTION_TOKEN function 
IS_TOKEN is
CONSTANT_TOKEN constant 
PLUS_TOKEN + 
AFF_TOKEN := 
EG_TOKEN = 
PO_TOKEN ( 
PF_TOKEN )
P_TOKEN  : 
PT_TOKEN .
NULL_TOKEN null
PACKAGE_TOKEN package 
BODY_TOKEN  body 
COMS_TOKEN -- 
NATURAL_TOKEN Natural 
AND_TOKEN  and  
OR_TOKEN  or
SPARK_MODE_TOKEN SPARK_MODE
PRAGMA_TOKEN  pragma
ASSERT_TOKEN Assert
TYPF_TOKEN type
NEW_TOKEN new 
PRIVATE_TOEKN private 
ARRAY_TOKEN array
OF_TOEKN of 
OFF_TOKEN off 
POSITIVE_TOKEN Positive
RECORD_TOKEN record 
FIRST_TOKEN 'First
RANGE_TOKEN range 
SUBTYPE subtype 
RAISE_TOKEN raise 
LOOP_TOKEN loop 
THEN_TOKEN then 
IF_TOKEN if 
EXCEPTION_TOKEN exception
V_TOKEN ,
STRING_TOKEN String 
CHARACTER_TOKEN character  
INF_TOKEN <
SUP_TOKEN >
DIFF_TOKEN <>
IMP_TOKEN =>   
FOR_TOKEN  for 
LOOP_TOKEN loop
REVERSE_TOKEN reverse
INFEG_TOKEN <=
SUPEG_TOKEN >= 
WHILE_TOKEN while 

